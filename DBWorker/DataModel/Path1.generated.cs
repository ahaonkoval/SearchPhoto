//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : PathData
	/// Data Source    : PathData
	/// Server Version : 3.14.2
	/// </summary>
	public partial class PathDataDB : LinqToDB.Data.DataConnection
	{
		public ITable<ImgExt>   ImgExt    { get { return this.GetTable<ImgExt>(); } }
		public ITable<Path>     Paths     { get { return this.GetTable<Path>(); } }
		public ITable<PathFile> PathFiles { get { return this.GetTable<PathFile>(); } }

		public PathDataDB()
		{
			InitDataContext();
		}

		public PathDataDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("img_ext")]
	public partial class ImgExt
	{
		[Column("ext_id"), PrimaryKey, Identity] public long   ExtId { get; set; } // integer
		[Column("name"),   Nullable            ] public string Name  { get; set; } // text(max)
	}

	[Table("Path")]
	public partial class Path
	{
		[Column("id"),         PrimaryKey,  Identity] public long     Id        { get; set; } // integer
		[Column("name"),          Nullable          ] public string   Name      { get; set; } // varchar(max)
		[Column("path_value"), NotNull              ] public string   PathValue { get; set; } // text(max)
		[Column("qty"),           Nullable          ] public long?    Qty       { get; set; } // integer
		[Column("created"),    NotNull              ] public DateTime Created   { get; set; } // date
	}

	[Table("PathFiles")]
	public partial class PathFile
	{
		[Column("id"),                                              PrimaryKey,  Identity] public long     Id        { get; set; } // integer
		[Column("path_id"),                                         NotNull              ] public long     PathId    { get; set; } // integer
		[Column("file_name"),                                       NotNull              ] public string   FileName  { get; set; } // text(max)
		[Column("file_path"),                                          Nullable          ] public string   FilePath  { get; set; } // text(max)
		[Column("created",   SkipOnInsert=true, SkipOnUpdate=true), NotNull              ] public DateTime Created   { get; set; } // timestamp
		[Column("extension"),                                          Nullable          ] public string   Extension { get; set; } // text(max)
	}

	public static partial class TableExtensions
	{
		public static ImgExt Find(this ITable<ImgExt> table, long ExtId)
		{
			return table.FirstOrDefault(t =>
				t.ExtId == ExtId);
		}

		public static Path Find(this ITable<Path> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PathFile Find(this ITable<PathFile> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
